<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PTcheck &trade; 最大的中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
em {
font-style: normal;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green,em{color:#008000}

a:hover{color:red;}
SS{color:#FF0000;}
-->
</style>
 <script type="text/javascript">
        function showall(obj) {
            var r = obj.parentNode.parentNode;
            var r1 = r.nextSibling;
            var r2 = r1.nextSibling;
            r1.setAttribute('style', "display:block;");
            r2.setAttribute('style', "display:block;");
            r.setAttribute('style', "display:none;");
        }
  </script>
</head>

<body><div class="zhengwen"><span style="margin-left:25px"></span>2012 届本科生毕业设计说明书<br><br><span style="margin-left:25px"></span>水果批发市场综合应用系统的设计与实现                    <br><br><span style="margin-left:25px"></span>学        院：	     计算机工程学院                               <br><br><span style="margin-left:25px"></span>专        业：	       软件工程                             <br><br><span style="margin-left:25px"></span>学 生 姓  名：	         兰登科                          <br><br><span style="margin-left:25px"></span>班        级：	12级2班                                                                                                                       	学号  12241078            <br><br><span style="margin-left:25px"></span>指导教师姓名：	 吴淑婷            	职称    讲师              <br><br><span style="margin-left:25px"></span>最终评定成绩	                                    <br><br><span style="margin-left:25px"></span>2016年3月 <br><br><span style="margin-left:25px"></span>水果批发市场综合应用系统的设计与实现<br><br><span style="margin-left:25px"></span>作者：兰登科<br><br><span style="margin-left:25px"></span>导师：吴淑婷<br><br><span style="margin-left:25px"></span>摘 要<br><br><span style="margin-left:25px"></span>	水果批发市场综合应用系统是为了提高水果批发市场中交易的效率而开发的项目，旨在通过计算机互联网技术介入交易，优化交易流程，减少交易环节，来减少交易花费的时间。最大化买卖双发利益的同时，还向市场监管者提供了一种监管市场的渠道。<br><br><span style="margin-left:25px"></span>	论文首先讨论了项目的背景及意义，然后对现有项目进行了对比分析。其次，分析了项目的需求，确定了系统的功能，主要功能有买家下单、卖家进货、商品上架、用户登录、用户管理、店铺管理等。最终选定B/S架构作为项目的解决方案。最后讨论了各个功能的实现，并简要说明了系统的测试情况。<br><br><span style="margin-left:25px"></span>关键词：Java，Spring，Web，水果批发市场<br><br><span style="margin-left:25px"></span>Design and implementation of Fruit wholesale market comprehensive application system<br><br><span style="margin-left:25px"></span>Author：Landengke<br><br><span style="margin-left:25px"></span>Tutor：Wushuting<br><br><span style="margin-left:25px"></span>ABSTRACT<br><br><span style="margin-left:25px"></span>	The developing of Fruit wholesale market comprehensive application system is order to improve the trade efficiency in fruit wholesale market. It aim at optimizing the trade process, reducing the trade link, and reducing the time of the trade cost by using the computer Internet technology. And application of the system maximizes the benefit of buyers and sellers at the same time, the market regulator was provided with a new channel to regulated market.<br><br><span style="margin-left:25px"></span>	This paper discussed the background and significance of the project firstly, then analysed the existing projects comparatively. Second, analysed the requirements of system, determined what functions the system have, including buyer creating orders, seller replenishing stocks, shelving goods, user logining, user management, store management and so on. Selected B/S architecture as solution of the project. Finally, discussed the implements of the functions, and described the test results of the system simplely.<br><br><span style="margin-left:25px"></span>Keywords: Java, Spring, web, Fruit wholesale market<br><br><span style="margin-left:25px"></span>目录<br><br><span style="margin-left:25px"></span>1 绪论	- 6 -<br><br><span style="margin-left:25px"></span>1.1 项目背景及意义	- 6 -<br><br><span style="margin-left:25px"></span>1.2 目前现有相关项目	- 6 -<br><br><span style="margin-left:25px"></span>1.2.1 易果网	- 6 -<br><br><span style="margin-left:25px"></span>1.2.1 朗玉水果销售管理系统	- 6 -<br><br><span style="margin-left:25px"></span>1.3论文研究的目的和内容	- 6 -<br><br><span style="margin-left:25px"></span>2 系统需求分析	- 8 -<br><br><span style="margin-left:25px"></span>2.1 系统需求目标	- 8 -<br><br><span style="margin-left:25px"></span>2.2 系统可行性分析	- 10 -<br><br><span style="margin-left:25px"></span>2.2.1 市场可行性	- 10 -<br><br><span style="margin-left:25px"></span>2.2.2 技术可行性	- 10 -<br><br><span style="margin-left:25px"></span>2.3 系统安全性需求分析	- 10 -<br><br><span style="margin-left:25px"></span>2.4 系统可靠性需求分析	- 10 -<br><br><span style="margin-left:25px"></span>2.5 系统性能需求分析	- 10 -<br><br><span style="margin-left:25px"></span>2.6 系统数据库需求分析	- 11 -<br><br><span style="margin-left:25px"></span>3 系统解决方案及关键技术	- 12 -<br><br><span style="margin-left:25px"></span>3.1 B/S架构	- 12 -<br><br><span style="margin-left:25px"></span>3.2 Java语言	- 12 -<br><br><span style="margin-left:25px"></span>3.3 Spring框架	- 12 -<br><br><span style="margin-left:25px"></span>3.4应用服务器和数据库	- 12 -<br><br><span style="margin-left:25px"></span>3.5 Redis	- 13 -<br><br><span style="margin-left:25px"></span>4  系统概要设计	- 14 -<br><br><span style="margin-left:25px"></span>4.1 系统功能模块结构设计	- 14 -<br><br><span style="margin-left:25px"></span>4.2 系统数据库设计	- 15 -<br><br><span style="margin-left:25px"></span>4.2.1 数据库设计说明	- 15 -<br><br><span style="margin-left:25px"></span>4.2.3 数据库详细设计	- 15 -<br><br><span style="margin-left:25px"></span>5  系统详细设计	- 21 -<br><br><span style="margin-left:25px"></span>5.1 页面详细设计	- 21 -<br><br><span style="margin-left:25px"></span>5.1.1 首页	- 21 -<br><br><span style="margin-left:25px"></span>5.1.2 注册	- 21 -<br><br><span style="margin-left:25px"></span>5.1.3 登录	- 22 -<br><br><span style="margin-left:25px"></span>5.1.4 卖家个人中心	- 22 -<br><br><span style="margin-left:25px"></span>5.1.5 买家个人中心	- 23 -<br><br><span style="margin-left:25px"></span>5.1.6 管理员个人中心	- 24 -<br><br><span style="margin-left:25px"></span>5.1.7 创建订单页	- 25 -<br><br><span style="margin-left:25px"></span>5.1.8 创建进货单	- 25 -<br><br><span style="margin-left:25px"></span>5.1.9 正在销售商品列表	- 26 -<br><br><span style="margin-left:25px"></span>5.1.10 商品详情	- 26 -<br><br><span style="margin-left:25px"></span>5.2 逻辑层详细设计	- 26 -<br><br><span style="margin-left:25px"></span>5.2.1 权限管理	- 26 -<br><br><span style="margin-left:25px"></span>5.2.1 用户注册	- 27 -<br><br><span style="margin-left:25px"></span>5.2.2 用户登录	- 27 -<br><br><span style="margin-left:25px"></span>5.2.3 进货及上架	- 28 -<br><br><span style="margin-left:25px"></span>5.2.3 买家向卖家下单	- 28 -<br><br><span style="margin-left:25px"></span>5.2.4 通过购物车向卖家下单	- 29 -<br><br><span style="margin-left:25px"></span>6 系统实现	- 31 -<br><br><span style="margin-left:25px"></span>6.1 买家注册页面	- 31 -<br><br><span style="margin-left:25px"></span>6.2 用户登录页面	- 31 -<br><br><span style="margin-left:25px"></span>6.3 管理员添加店铺页面	- 32 -<br><br><span style="margin-left:25px"></span>6.4 卖家进货页面	- 32 -<br><br><span style="margin-left:25px"></span>7 系统测试	- 33 -<br><br><span style="margin-left:25px"></span>7.1 测试目标	- 33 -<br><br><span style="margin-left:25px"></span>7.2 测试方法	- 33 -<br><br><span style="margin-left:25px"></span>7.3 测试类型	- 33 -<br><br><span style="margin-left:25px"></span>7.4 测试结果	- 33 -<br><br><span style="margin-left:25px"></span>8 结  论	- 34 -<br><br><span style="margin-left:25px"></span>参考文献	- 35 -<br><br><span style="margin-left:25px"></span>致  谢	- 36 -<br><br><span style="margin-left:25px"></span>1 绪论<br><br><span style="margin-left:25px"></span>1.1 项目背景及意义<br><br><span style="margin-left:25px"></span>大型水果批发市场是区域范围内，水果产品的集散中心，其影响范围广泛，可覆盖多个省。批发商将果农种的水果集中到批发市场，销售给大型超市、个体商，这直接带动了当地的经济发展。当前人民生活水平日益提高，水果也成了健康生活的必需品。每天，水果批发市场内都会有大量的交易，而这些交易决定了我们日常生活中能不能吃到美味的水果。<br><br><span style="margin-left:25px"></span>水果批发市场一般地处城区边缘，紧邻主要道路，交通方便，便于大型货车将水果运进水果批发市场内，同时也方便向外销售。市场内交易频繁，人员众多，如果采购水果时停留时间稍长，便容易造成交通拥堵，道路堵塞也会影响其他人的行动。基于以上背景，产生了开发水果批发市场综合应用系统的想法。借助互联网技术来解决现有问题，让互联网服务于我们的生活，是我们的生活更便捷。<br><br><span style="margin-left:25px"></span>1.2 目前现有相关项目<br><br><span style="margin-left:25px"></span>1.2.1 易果网<br><br><span style="margin-left:25px"></span>易果网成立于2005年，作为中国第一家生鲜电商，其经营范围广泛，包含水果之外的各种生鲜食材。其经营模式与实体水果批发市场截然不同，易果网主要面向个人，拥有自己的物流渠道，可送货到家。这种新颖的经营模式是未来的主流模式。易果网成立时间长，各种环节都已成熟，将来可取代水果批发市场，省去批发商的环节，更好的将优质产品送到消费者手中。<br><br><span style="margin-left:25px"></span>1.2.1 朗玉水果销售管理系统<br><br><span style="margin-left:25px"></span>朗玉水果销售管理系统是一款与本系统功能相似的应用管理软件，经过多年市场的应用和软件升级，功能比较完善。但该系统是C/S架构，需要购买者在使用的计算机上安装应用程序以及MySQL数据库，需要一定的计算机知识，使用较为复杂。<br><br><span style="margin-left:25px"></span>1.3论文研究的目的和内容<br><br><span style="margin-left:25px"></span>本文基于对水果批发市场综合应用系统的建设，介绍了从需求分析，系统设计到实现的过程。基于对现有项目的分析，本文探讨的项目是一种面向水果批发市场内的卖家和买家的网站，整个系统实现了水果批发市场内卖家和买家常用的典型的功能，可为这些人群带来更大的便利。<br><br><span style="margin-left:25px"></span>2 系统需求分析<br><br><span style="margin-left:25px"></span>2.1 系统需求目标<br><br><span style="margin-left:25px"></span>本系统的开发是为了减轻水果批发市场中卖家的工作量，提高交易的效率。系统目标是能够成为水果批发市场中买卖双发的交易平台。买家通过系统向卖家下订单，卖家可以根据自己的库存信息，选择接受订单，而后备货，等待买家取货，完成交易。卖家将进货单录入系统，交易完成后，系统可给出卖家的销售统计信息。市场管理人员可以通过系统发布市场公告，维护市场内的店铺信息，锁定恶意用户。<br><br><span style="margin-left:25px"></span>表2.1 系统功能表<br><br><span style="margin-left:25px"></span>用户	功能	功能说明<br><br><span style="margin-left:25px"></span>卖家	生成进货单	卖家进货时使用该功能，主要记录各种商品的数量，重量，进价，而后将新产品录入库存<br><br><span style="margin-left:25px"></span>	商品上架	新产品在进入库存后，卖家添加商品介绍，产品图片，编辑售价后，添加到销售列表，买家在商品列表中将能看到该产品<br><br><span style="margin-left:25px"></span>	商品下架	卖家可使用该功能停止销售指定的产品，买家在商品列表中将看不到该商品<br><br><span style="margin-left:25px"></span>	处理订单	在买家向卖家下单后，卖家可以根据库存选择接受或拒绝买家的订单<br><br><span style="margin-left:25px"></span>	新建订单	当买家没有提前下单，而是到店铺中选购时，卖家可使用该功能记录当次交易<br><br><span style="margin-left:25px"></span>	历史订单	卖家可查看已完成的交易详情<br><br><span style="margin-left:25px"></span>	销售统计	此功能可以给出卖家指定时间内的销售情况，卖家可以根据此调整销售策略<br><br><span style="margin-left:25px"></span>买家	注册	买家在注册新用户后方可使用该系统下单<br><br><span style="margin-left:25px"></span>	浏览商品	买家可浏览商品列表，选择自己需要的商品<br><br><span style="margin-left:25px"></span>	查看商品详情	买家可以从商品列表页进入商品详情页，查看商品的图文介绍<br><br><span style="margin-left:25px"></span>	添加到购物车	买家将需要的商品添加进购物车后，可在购物车中编辑商品数量或放弃该商品，而后向卖家下单<br><br><span style="margin-left:25px"></span>	下单	买家在选购好商品后，可向卖家下单，或者买家直接输入需要的商品，向指定的卖家下单<br><br><span style="margin-left:25px"></span>市场管理员	发布公告	市场管理员可以在系统中发布一些关于市场的信息，登录后的用户可以在首页看到该公告<br><br><span style="margin-left:25px"></span>	维护店铺信息	管理员使用此功能可以将新的店铺添加到系统中，删除指定的店铺，修改指定的店铺的信息，包括名称，地址能<br><br><span style="margin-left:25px"></span>	锁定用户	管理员可以锁定恶意用户，被锁定的用户将不能进行任何操作，直到管理员接触锁定<br><br><span style="margin-left:25px"></span>公共	登录	用户登录后才可进行相应的操作<br><br><span style="margin-left:25px"></span>	修改个人信息	修改密码等操作<br><br><span style="margin-left:25px"></span>系统用例图如下：<br><br><span style="margin-left:25px"></span>图2.1 系统用例图<br><br><span style="margin-left:25px"></span>2.2 系统可行性分析<br><br><span style="margin-left:25px"></span>2.2.1 市场可行性<br><br><span style="margin-left:25px"></span>	目前，市场上关于水果批发市场现有的软件大都是C/S架构，不光购买花费高昂，部署安装也很复杂，需要有一定计算机专业知识的人员才能安装，而且日后的升级维护也是个难题。而本系统基于B/S架构，不存在以上问题，故市场可行性较强。<br><br><span style="margin-left:25px"></span>2.2.2 技术可行性<br><br><span style="margin-left:25px"></span>	目前，关于web开发已经有很多成熟的模式，尤其是J2EE，有很多开源的框架，比较流行的有Spring,struts等。就当前掌握的前端知识，例如html,jQuery，开发一般的网页也比较容易。所以只要利用好现有技术，就足够完成开发任务，在技术上没有问题。<br><br><span style="margin-left:25px"></span>2.3 系统安全性需求分析<br><br><span style="margin-left:25px"></span>	系统中保存着许多个人敏感信息和买卖双方的交易记录，这些信息需要妥善保存，但由于时间关系，在系统中并没有做精细的数据权限的控制，只是对用户的行为进行控制。如买家只能浏览信息，卖家才能编辑一些商品信息，只有管理员才能编辑店铺信息等。而交易记录是买卖双方的重要数据，需要定期备份，并将备份数据保存到多个磁盘。此外，要提高系统的安全性，还要考虑网络传输，数据库服务器断电后的数据恢复等多个方面[ ]。<br><br><span style="margin-left:25px"></span>2.4 系统可靠性需求分析<br><br><span style="margin-left:25px"></span>	商业交易设计大量数据，因此保证数据正确十分必要。考虑到系统中有很多数据需要用户输入，故数据的校验要十分全面，如果用户输入的数据有问题，则给予提示，否则错误的数据进入系统，有可能引起意想不到的问题。数据校验不光只在前端页面进行，数据进入后台系统后，也需要进行充分的校验，保证没有错误数据。<br><br><span style="margin-left:25px"></span>2.5 系统性能需求分析<br><br><span style="margin-left:25px"></span>	水果批发市场的交易高峰期在早晨五六点钟，尤其是节假日，交易量更大。因此，系统需要能够承受一定量的并发访问，并且交易高峰期也要有较好的访问和响应速度。<br><br><span style="margin-left:25px"></span>2.6 系统数据库需求分析<br><br><span style="margin-left:25px"></span>图2.2 系统E-R图<br><br><span style="margin-left:25px"></span>3 系统解决方案及关键技术<br><br><span style="margin-left:25px"></span>3.1 B/S架构<br><br><span style="margin-left:25px"></span>	随着Web 2.0时代的到来，软件的网络架构正从传统的C/S架构逐渐向更方便快捷的B/S架构转变，B/S架构大大简化了用户使用网络应用的难度，进一步推动力互联网的繁荣[ ]。B/S架构具有两个优点，一是客户端使用统一的浏览器，二是服务端基于统一的HTTP协议，这大大降低了网站用户、维护人员和开发人员的学习成本。为了方便用户使用和应用的推广，决定使用B/S架构来开发项目。<br><br><span style="margin-left:25px"></span>3.2 Java语言<br><br><span style="margin-left:25px"></span>Java是目前最流行的面向对象编程语言之一，由Sun Microsystems公司于1995年5月推出到现在已经经历了二十一年，Java已经成为一门非常成熟的编程语言，其用户众多，社区庞大，遇到问题又很容易通过前人的经验得到解决，这使得更多的人选择了Java来作为自己的开发语言[ ]。<br><br><span style="margin-left:25px"></span>Java具有以下特点：简单、面向对象、支持分布式、可跨平台、高性能、多线程、动态加载[ ]。<br><br><span style="margin-left:25px"></span>3.3 Spring框架<br><br><span style="margin-left:25px"></span>Spring框架由Rod Johnson开发，2004年发布了第一个版本，经过十多年的发展，Spring已经成为Java EE开发中最重要的框架之一。Spring是一个从实际开发中抽取出来的框架，它完成了大量开发中的通用步骤，留给开发者的仅仅是与特定应用相关的部分，从而大大提高了应用的开发效率[ ]。为了规范代码结构，提高开发效率，在项目的后台代码中多处使用了Spring的技术。<br><br><span style="margin-left:25px"></span>3.4应用服务器和数据库<br><br><span style="margin-left:25px"></span>Tomcat是Java领域最著名的开源Web容器，简单、易用，稳定性好，因为Tomcat是纯java实现，所以可以在任何平台运行。<br><br><span style="margin-left:25px"></span>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于 Oracle 旗下公司，MySQL是目前最流行的关系型数据库之一。<br><br><span style="margin-left:25px"></span>为了提高开发的效率，选择将Tomcat和MySQL分别作为项目的应用服务器和数据库，并安装在Linux操作系统下。<br><br><span style="margin-left:25px"></span>3.5 Redis<br><br><span style="margin-left:25px"></span>Redis是一个Key-Value存储系统，支持多种value类型和丰富的操作，为了保证效率，数据都是缓存在内存中，并支持将数据写入磁盘和分布式部署[ ]。<br><br><span style="margin-left:25px"></span>为了减轻应用服务器的压力，在项目中Redis单独部署一台服务器，缓存session信息，后期改进计划将数据库的查询结构也缓存到Redis中。<br><br><span style="margin-left:25px"></span>4  系统概要设计<br><br><span style="margin-left:25px"></span>	本系统基于J2EE平台，采用B/S三层体系结构，由前台用户界面层，中间业务逻辑层，后台数据处理层组成。用户界面层与业务逻辑层之间使用json作为数据交换的格式。前端完全使用javascript与后台进行交互，即前后端分离，前端不依赖于后台技术。这样做的好处就是即使后台换做另一种技术实现，前端也不用做任何修改。系统在windows下使用eclipse开发，使用git管理代码版本，运行于linux下的tomcat中。<br><br><span style="margin-left:25px"></span>4.1 系统功能模块结构设计<br><br><span style="margin-left:25px"></span>图4.1 系统功能模块结构图<br><br><span style="margin-left:25px"></span>4.2 系统数据库设计<br><br><span style="margin-left:25px"></span>4.2.1 数据库设计说明<br><br><span style="margin-left:25px"></span>	为了保证数据记录的不重复，均使用UUID作为表的主键。UUID(Universally Unique Identifier)全局唯一标识符,是指在一台机器上生成的数字，它保证对在同一时空中的所有机器都是唯一的,按照开放软件基金会(OSF)制定的标准计算，用到了以太网卡地址、纳秒级时间、芯片ID码和许多可能的数字[ ]。此外，为了方便增删数据，降低数据库服务器的负担，在设计表时并没有设置外键，这在一定程度上降低了数据的安全性，但可以通过精细的编码来弥补[ ]。由于时间有限，为了编码的方便，在一定程度上增加了数据的冗余，牺牲一定的存储空间来换取更便捷的查询。<br><br><span style="margin-left:25px"></span>4.2.3 数据库详细设计<br><br><span style="margin-left:25px"></span>数据库表的详细设计如表所示<br><br><span style="margin-left:25px"></span>表4.1 用户表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>用户id	user_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>用户名	user_name	varchar(30)	否	<br><br><span style="margin-left:25px"></span>密码	pwd	char(32)	否	<br><br><span style="margin-left:25px"></span>手机号码	phone	char(11)	否	<br><br><span style="margin-left:25px"></span>用户类型	user_type	char(1)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>更新时间	update_time	timestamp	否	<br><br><span style="margin-left:25px"></span>用户表用来存储用户信息。系统中有三类用户，买家、卖家和管理员，user_type用来区分用户类型，B表示买家，S表示卖家，M表示管理员，故长度为一的字符就可以满足需求。用户id用来唯一标识一个用户，是用户表的主键，所以不能有重复值出现，故数据库中的主键均使用32位的uuid。用户名保存用户的姓名，长度30的字符足够使用。密码长度为32个字符，实际存储的是经过md5加密的密文。手机号码是用户登录的账号，常规手机号码长度都是11。<br><br><span style="margin-left:25px"></span>表4.2 店铺表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>店铺id	store_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>卖家id	seller_id	char(32)	否	<br><br><span style="margin-left:25px"></span>店铺名称	store_name	varchar(20)	否	<br><br><span style="margin-left:25px"></span>联系人	contact	varchar(20)	否	<br><br><span style="margin-left:25px"></span>联系电话	cantact_phone	char(11)	否	<br><br><span style="margin-left:25px"></span>地址	address	varchar(100)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>更新时间	update_time	timestamp	否	<br><br><span style="margin-left:25px"></span>	店铺表用来存储店铺信息。店铺id用来唯一标识一个店铺，卖家id标识这个店铺属于哪个卖家，店铺名称是店铺的名字，最大长度20。联系人是店铺的实际管理人员的名字，最大长度20，联系人电话是店铺实际管理人员的电话，长度11。地址是店铺的详细地址，最大长度100个字符。<br><br><span style="margin-left:25px"></span>表4.3 商品表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>商品id	good_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>商品名称	good_name	varchar(20)	否	<br><br><span style="margin-left:25px"></span>商品图片url	good_photo_url	varchar(100)	否	<br><br><span style="margin-left:25px"></span>商品说明	good_desc	varchar(200)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>	商品表存储商品信息，但不保存商品的价格，因为每个店铺同一个商品的售价可能不同。商品id同样使用uuid作为主键，商品名称最长20个字符，商品图片url存储的是商品图片的地址，最长100个字符。商品说明保存商品的描述，最长200个字符。<br><br><span style="margin-left:25px"></span>表4.4 进货表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>进货批次号	stock_batch_no	char(32)	否	主键<br><br><span style="margin-left:25px"></span>店铺id	店铺id	char(32)	否	<br><br><span style="margin-left:25px"></span>商品金额	good_price	decimal(9,2)	否	<br><br><span style="margin-left:25px"></span>押金总额	deposit	decimal(7,2)	否	<br><br><span style="margin-left:25px"></span>总金额	total_price	decimal(9,2)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>	进货表存储每次进货的总金额，时间等信息，具体的进货信息在进货明细表中。进货批次号使用uuid作为主键，店铺id表明是哪个店铺的进货，押金总额是各种外包装押金的总和，最大长度7位，保留小数点后2位，商品金额是所有商品金额的总和，最大长度9位，保留小数点后2位，总金额是所有金额的总和，最大长度9位，保留小数点后2位。<br><br><span style="margin-left:25px"></span>表4.5 进货明细表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>进货明细id	stock_detail_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>进货批次号	stock_batch_no	char(32)	否	<br><br><span style="margin-left:25px"></span>商品id	good_id	char(32)	否	<br><br><span style="margin-left:25px"></span>商品名称	good_name	varchar(20)	否	<br><br><span style="margin-left:25px"></span>计价单位	value_unit	char(8)	否	<br><br><span style="margin-left:25px"></span>进价	in_price	decimal(5,2)	否	<br><br><span style="margin-left:25px"></span>包装方式	package_type	char(7)	否	<br><br><span style="margin-left:25px"></span>单个包装重量	package_weight	decimal(5,2)	是	<br><br><span style="margin-left:25px"></span>单个包装押金	package_deposit	decimal(5,2)	是	<br><br><span style="margin-left:25px"></span>包装数量	package_num	integer	是	<br><br><span style="margin-left:25px"></span>毛重	gross_weight	decimal(7,2)	是	<br><br><span style="margin-left:25px"></span>净重	net_weight	decimal(7,2)	是	<br><br><span style="margin-left:25px"></span>押金总额	total_deposit	decimal(7,2)	是	<br><br><span style="margin-left:25px"></span>商品总额	total_goods_price	decimal(9,2)	否	<br><br><span style="margin-left:25px"></span>总金额	taotal_price	decimal(9,2)	否	<br><br><span style="margin-left:25px"></span>备注	remark	varchar(255)	是	<br><br><span style="margin-left:25px"></span>	进货明细表存储进货时每种商品的详细信息。进货明细id唯一标识一条进货明细，进货批次号表明该进货明细属于哪次进货。商品id表明该明细对应的事哪种商品，商品名称是该进货明细对应的商品的名称。计价单位是该商品的计价方式，kilogram表示按千克计价，number表示按个计价，box表示按箱计价，case表示按框计价，bag表示按袋计价。进价表示商品进货时的价格，保留两位小数。包装方式表示商品的包装方式，in_bulk表示散装，in_box表示箱装，in_case表示框装，in_bag表示袋装。单个包装重量是该商品单个包装的重量，保留小数点后两位。单个包装押金是该商品单个包装的押金，可以为空，保留小数点后两位。<br><br><span style="margin-left:25px"></span>包装数量表示该商品在本次进货中总共买入的按包装计数的数量。毛重表示商品包括包装的总重量，净重为商品除去包装的总重量，押金总额为该商品所有包装的押金的总和，商品总额为该次进货该商品的实际金额，总金额为商品押金和商品金额的总和。备注为该进货明细需要额外说明的信息。<br><br><span style="margin-left:25px"></span>表4.6 库存表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>店铺id	store_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>商品id	good_id	char(32)	否	<br><br><span style="margin-left:25px"></span>进货批次	stock_batch_no	char(13)	否	<br><br><span style="margin-left:25px"></span>包装方式	package_type	char(7)	否	<br><br><span style="margin-left:25px"></span>计价单位	value_unit	char(8)	否	<br><br><span style="margin-left:25px"></span>剩余计价单位量	left_num	decimal(7,2)	否	<br><br><span style="margin-left:25px"></span>剩余重量	left_weight	decimal(7,2)	是	<br><br><span style="margin-left:25px"></span>剩余包装量	left_package_num	integer	是	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>	库存表存储店铺的库存信息。店铺id表明该条记录是属于哪个店铺的库存信息，商品id表示该条记录对应的商品的id，进货批次号表明该商品是哪次进货买入的。剩余计价单位量为该商品以计价单位计算时剩余的数量。剩余包装量为该商品以包装单位计算时剩余的数量。<br><br><span style="margin-left:25px"></span>表4.7 订单表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>订单id	order_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>店铺id	store_id	char(32)	否	<br><br><span style="margin-left:25px"></span>买家id	买家id	char(32)	否	<br><br><span style="margin-left:25px"></span>订单状态	order_status	char(8)	否	<br><br><span style="margin-left:25px"></span>商品总价	good_price	decimal(13,4)	否	<br><br><span style="margin-left:25px"></span>押金总额	deposit	decimal(7,2)	是	<br><br><span style="margin-left:25px"></span>订单总额	order_price	decimal(13,4)	否	<br><br><span style="margin-left:25px"></span>备注	remark	varchar(255)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	是	<br><br><span style="margin-left:25px"></span>	订单表存储订单的买家和店铺以及金额等信息，详细订单信息在订单明细表中。订单id唯一标识一个订单，店铺id表明该订单属于哪个店铺。买家id为下单的买家的标识。订单状态标识该订单处于哪个处理阶段，w4s_c表示等待卖家确认，w4b_c表示等待买家确认，b_w4b_p表示卖家发回，等待买家处理，finished表示已完成，canceled表示已取消。<br><br><span style="margin-left:25px"></span>表4.8 订单明细表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>订单明细id	detail_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>订单id	order_id	char(32)	否	<br><br><span style="margin-left:25px"></span>商品id	good_id	char(32)	否	<br><br><span style="margin-left:25px"></span>商品名称	good_name	varchar(20)	否	<br><br><span style="margin-left:25px"></span>进货批次号	stock_batch_no	char(10)	否	<br><br><span style="margin-left:25px"></span>计价单位	value_unit	char(8)	否	<br><br><span style="margin-left:25px"></span>成交价格	done_price	decimal(5,2)	否	<br><br><span style="margin-left:25px"></span>成交量	num	integer	否	<br><br><span style="margin-left:25px"></span>包装方式	package_type	char(7)	否	<br><br><span style="margin-left:25px"></span>单个包装重量	package_weight	decimal(4,2)	是	<br><br><span style="margin-left:25px"></span>单个包装押金	package_deposit	decimal(5,2)	是	<br><br><span style="margin-left:25px"></span>包装数量	package_num	integer	是	<br><br><span style="margin-left:25px"></span>毛重	gross_weight	decimal(7,2)	否	<br><br><span style="margin-left:25px"></span>净重	net_weight	decimal(7,2)	否	<br><br><span style="margin-left:25px"></span>押金总额	total_deposit	decimal(7,2)	是	<br><br><span style="margin-left:25px"></span>商品总额	total_goods_price	decimal(9,2)	否	<br><br><span style="margin-left:25px"></span>总金额	taotal_price	decimal(9,2)	否	<br><br><span style="margin-left:25px"></span>备注	remark	varchar(255)	是	<br><br><span style="margin-left:25px"></span>	订单明细表存储订单详细内容。订单明细id唯一标识一条记录，订单id标识该明细属于哪个订单，成交价格为商品售出时的价格。<br><br><span style="margin-left:25px"></span>表4.9 正在销售商品表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>商品id	good_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>店铺id	store_id	char(32)	否	<br><br><span style="margin-left:25px"></span>计价单位	value_unit	char(1)	否	<br><br><span style="margin-left:25px"></span>售价	out_price	decimal(5,2)	否	<br><br><span style="margin-left:25px"></span>包装方式	package_type	char(1)	否	<br><br><span style="margin-left:25px"></span>单个包装重量	package_weight	decimal(5,2)	是	<br><br><span style="margin-left:25px"></span>单个包装押金	package_deposit	decimal(5,2)	是	<br><br><span style="margin-left:25px"></span>商品状态	good_status	char(1)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>更新时间	update_time	timestamp	否	<br><br><span style="margin-left:25px"></span>	正在销售商品表存储正在销售的商品。售价为该商品销售的价格，保留两位小数。商品状态代表该商品实时的状态，selling表示正在销售，unselling表示已下架，stockout表示缺货。<br><br><span style="margin-left:25px"></span>表4.10 公告表<br><br><span style="margin-left:25px"></span>字段含义	字段名	数据类型	可否为空	备注<br><br><span style="margin-left:25px"></span>公告id	notice_id	char(32)	否	主键<br><br><span style="margin-left:25px"></span>内容	content	varchar(255)	否	<br><br><span style="margin-left:25px"></span>创建人	creator	char(32)	否	<br><br><span style="margin-left:25px"></span>创建时间	create_time	timestamp	否	<br><br><span style="margin-left:25px"></span>	公告表存储管理员发布的公告，最新的公告将显示到首页上。公告id将唯一标识一条公告，内容为公告的内容，创建人为发布公告的管理员。<br><br><span style="margin-left:25px"></span>5  系统详细设计<br><br><span style="margin-left:25px"></span>5.1 页面详细设计<br><br><span style="margin-left:25px"></span>	页面时用户与系统交互的接口，界面设计的好坏直接决定了用户体验。为了不依赖与后台技术，界面与逻辑层的交互大部分使用javaScript控制，使用json作为交换数据的格式，这在一定程度上也增大了开发成本。<br><br><span style="margin-left:25px"></span>5.1.1 首页<br><br><span style="margin-left:25px"></span>表5.1 首页详细设计表<br><br><span style="margin-left:25px"></span>页面名称	首页<br><br><span style="margin-left:25px"></span>页面路径	/fruit/index.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>注册	按钮点击	register()	点击注册按钮，通过js方法跳转到注册页面<br><br><span style="margin-left:25px"></span>登录	按钮点击	login()	点击登录按钮，跳转到登录页面<br><br><span style="margin-left:25px"></span>加载公告	页面加载	getLatestNotice()	页面加载时调用此方法加载最新的市场公告，显示到首页<br><br><span style="margin-left:25px"></span>加载商品列表	页面加载	getSellingGoods()	页面加载时通过此方法加载正在销售的水果，显示到页面<br><br><span style="margin-left:25px"></span>5.1.2 注册<br><br><span style="margin-left:25px"></span>	表5.2 注册详细设计表<br><br><span style="margin-left:25px"></span>页面名称	注册<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/user/register.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>注册	按钮点击	user_controller.register()	点击注册按钮，用户数据将提交到后台，校验通过后将返回注册成功<br><br><span style="margin-left:25px"></span>校验密码	按钮点击	check_pwd()	注册按钮点击后，首先校验两次输入的密码是否相同，相同则提交，不相同则提示两次输入的密码不一致<br><br><span style="margin-left:25px"></span>密码加密	按钮点击	md5()	提交数据前，将密码进行md5加密<br><br><span style="margin-left:25px"></span>获取图片验证码	页面加载	java:utils.getPassCode()	页面加载时获取图片验证码，在提交后做校验<br><br><span style="margin-left:25px"></span>5.1.3 登录<br><br><span style="margin-left:25px"></span>表5.3 登录详细设计表<br><br><span style="margin-left:25px"></span>页面名称	登录<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/user/login.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>登录	按钮点击	login()	点击登录按钮，数据将提交到后台，登录成功后，买家用户将回到首页，卖家和管理员将跳转到个人中心<br><br><span style="margin-left:25px"></span>获取图片验证码	页面加载	getPassCode()	页面加载时获取图片验证码，在提交后做校验<br><br><span style="margin-left:25px"></span>密码加密	按钮点击	md5()	提交数据前，将密码进行md5加密<br><br><span style="margin-left:25px"></span>5.1.4 卖家个人中心<br><br><span style="margin-left:25px"></span>表5.4 卖家个人中心详细设计表<br><br><span style="margin-left:25px"></span>页面名称	卖家个人中心<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/user/seller_center.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>加载店铺信息	页面加载	getStoreInfo()	卖家进入个人中心时加载店铺信息，如名称，网址，地址，图片等信息<br><br><span style="margin-left:25px"></span>待处理订单	按钮点击	getUnprocessedOrders()	点击待处理订单按钮，将加载待处理的订单列表到页面<br><br><span style="margin-left:25px"></span>历史订单 	按钮点击	getHistoryOrders()	点击历史订单按钮，将加载已完成的订单列表到页面<br><br><span style="margin-left:25px"></span>库存 	按钮点击	getStockInfo()	点击库存按钮，将加载库存信息到页面<br><br><span style="margin-left:25px"></span>进货	按钮点击	stock_in()	点击进货按钮，将跳转到进货单页面<br><br><span style="margin-left:25px"></span>正在销售	按钮点击	sellingGoods()	点击正在销售按钮，将加载正在销售的商品列表到页面<br><br><span style="margin-left:25px"></span>商品上架	按钮点击	hitShelves()	在库存列表上可进行商品上架操作，可编辑上架时商品的价格，包装等<br><br><span style="margin-left:25px"></span>商品下架	按钮点击	offShelf()	在正在销售的商品列表上可进行商品下架操作，下架后，商品将不能被买家看到<br><br><span style="margin-left:25px"></span>销售统计	按钮点击	 saleStatistics()	点击销售统计按钮，将跳转到销售统计页面<br><br><span style="margin-left:25px"></span>创建订单	按钮点击	createOrder()	点击创建订单按钮，将跳转到创建订单页面<br><br><span style="margin-left:25px"></span>修改密码	按钮点击	changePwd()	点击修改密码按钮，将跳转到重置密码页面<br><br><span style="margin-left:25px"></span>5.1.5 买家个人中心<br><br><span style="margin-left:25px"></span>表5.5 买家个人中心详细设计表<br><br><span style="margin-left:25px"></span>页面名称	买家个人中心<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/user/buyer_center.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>加载个人信息	页面加载	loadPersonalInfo()	页面加载时将加载买家的个人信息到页面，例如姓名，电话等<br><br><span style="margin-left:25px"></span>下单	按钮点击	createOrder()	点击下单按钮，将跳转到订单创建页面，买家可向指定的卖家下订单<br><br><span style="margin-left:25px"></span>待处理订单	按钮点击	getUnprocessedOrders()	点击待处理订单按钮，将加载待处理的订单列表到页面<br><br><span style="margin-left:25px"></span>历史订单 	按钮点击	getHistoryOrders()	点击历史订单按钮，将加载已完成的订单列表到页面<br><br><span style="margin-left:25px"></span>购物车	按钮点击	shoppingCart()	点击购物车按钮，将加载买家已选够的商品到页面，卖家可编辑购物车，而后向卖家下单<br><br><span style="margin-left:25px"></span>修改密码	按钮点击	changePwd()	点击修改密码按钮，将跳转到重置密码页面<br><br><span style="margin-left:25px"></span>5.1.6 管理员个人中心<br><br><span style="margin-left:25px"></span>表5.6 管理员个人中心详细设计表<br><br><span style="margin-left:25px"></span>页面名称	管理员个人中心<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/user/manager_center.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>加载个人信息	页面加载	loadPersonalInfo()	页面加载时将加载买家的个人信息到页面，例如姓名，电话等<br><br><span style="margin-left:25px"></span>发布公告	按钮点击	createNotice()	点击发布公告按钮，将跳转到公告发布页面，可在此编辑并发布公告<br><br><span style="margin-left:25px"></span>店铺管理	按钮点击	getStores()	点击店铺信息按钮，将加载店铺列表到页面，管理员可在此新增，删除，编辑店铺信息<br><br><span style="margin-left:25px"></span>用户管理	按钮点击	userManage()	点击用户管理按钮，将加载用户列表到页面，可在此锁定/解锁用户<br><br><span style="margin-left:25px"></span>修改密码	按钮点击	changePwd()	点击修改密码按钮，将跳转到重置密码页面<br><br><span style="margin-left:25px"></span>5.1.7 创建订单页<br><br><span style="margin-left:25px"></span>	表5.7 创建订单详细设计表<br><br><span style="margin-left:25px"></span>页面名称	创建订单<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/order/create_order.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>提交订单	按钮点击	createOrder()	点击提交按钮，数据将提交到后台创建一个订单 <br><br><span style="margin-left:25px"></span>创建订单明细	按钮点击	createOrderDetail()	此方法可在前端多次执行，每添加一中商品，就添加一条订单明细<br><br><span style="margin-left:25px"></span>5.1.8 创建进货单<br><br><span style="margin-left:25px"></span>表5.8 创建进货单详细设计表<br><br><span style="margin-left:25px"></span>页面名称	创建进货单<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/stock/create_stock_in.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>提交进货单	按钮点击	createStockIn()	点击提交按钮，数据将提交到后台，创建一个进货单<br><br><span style="margin-left:25px"></span>创建进货明细	按钮点击	createStockInDetail()	此方法可在前端多次执行，每添加一种商品，就添加一条进货明细<br><br><span style="margin-left:25px"></span>5.1.9 正在销售商品列表<br><br><span style="margin-left:25px"></span>表5.9 正在销售商品列表详细设计表<br><br><span style="margin-left:25px"></span>页面名称	正在销售商品列表<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/selling/selling_list.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>加载商品	页面加载	loadGoods()	页面加载时，将加载正在销售的商品的图片，价格等信息到页面，点击可进入商品详情页<br><br><span style="margin-left:25px"></span>排序商品	按钮点击	loadGoodsInOrder()	此方法可以按上架时间或销量排序加载正在销售的商品<br><br><span style="margin-left:25px"></span>5.1.10 商品详情<br><br><span style="margin-left:25px"></span>表5.10 商品详情页详细设计表<br><br><span style="margin-left:25px"></span>页面名称	商品详情<br><br><span style="margin-left:25px"></span>页面路径	/fruit/view/good/good_detailt.html<br><br><span style="margin-left:25px"></span>功能	触发事件	调用方法	功能描述<br><br><span style="margin-left:25px"></span>加载商品详情	页面加载	loadGoods()	页面加载时，将加载商品的图片和文字介绍，以及价格等信息到页面<br><br><span style="margin-left:25px"></span>添加到购物车	按钮点击	add2ShopingCart()	选择数量后可将该商品添加到购物车中<br><br><span style="margin-left:25px"></span>5.2 逻辑层详细设计<br><br><span style="margin-left:25px"></span>5.2.1 权限管理<br><br><span style="margin-left:25px"></span>前台请求后台资源时，使用spring AOP对请求进行拦截，通过请求中的token获取当前用户的角色，根据请求的资源名称获取需要的权限，如果当前用户不具有该权限，则抛出权限不足的异常，否则，转发请求到目标资源。<br><br><span style="margin-left:25px"></span> 图5.1 权限管理流程图<br><br><span style="margin-left:25px"></span>权限管理最初的解决方案是使用java web的过滤器对用户请求进行拦截，再验证用户是否有权限访问资源，但应用启动时，过滤器先于Spring启动，过滤器中的属性不能被Spring注入。后采用Spring切面技术代替过滤器，成功实现了这个功能。<br><br><span style="margin-left:25px"></span>5.2.1 用户注册<br><br><span style="margin-left:25px"></span>	用户注册的数据提交到逻辑层后，首先要检查用户输入的验证码是否正确，不正确返回&quot;验证码错误&rdquo;，然后检查用户的手机号格式是正确，不正确返回&quot;手机号码格式错误&rdquo;，正确则检查是否已经注册，如果已经注册返回&quot;此号码已经被注册&rdquo;。如果通过以上校验，则将用户的密码进行加密，而后保存到数据库中，返回&quot;注册成功&rdquo;。<br><br><span style="margin-left:25px"></span>5.2.2 用户登录<br><br><span style="margin-left:25px"></span>	用户登录时，首先校验手机号码格式是否正确，不正确返回&quot;手机号码格式错误&rdquo;，然后校验用户是否存在，不存在返回&quot;用户不存在&rdquo;，再校验密码是否正确，不正确返回&quot;密码错误&rdquo;，密码正确返回登录成功，买家登录后将返回到首页，卖家和管理员将跳转到个人中心。<br><br><span style="margin-left:25px"></span>图5.2 用户注册流程图	<br><br><span style="margin-left:25px"></span> 表5.3 用户登录流程图<br><br><span style="margin-left:25px"></span>5.2.3 进货及上架<br><br><span style="margin-left:25px"></span>	进货后，新的商品需先记录到库存表中，而后卖家编辑商品的售价，添加图片及文字介绍，而后才能上架。<br><br><span style="margin-left:25px"></span>5.2.3 买家向卖家下单<br><br><span style="margin-left:25px"></span>	买家在向买家下单时，需进入创建订单页面，先输入店铺名称，指定买家，而后添加订单明细，指定取货日期，最后提交订单。卖家在待处理订单列表中看到买家的订单后，可以根据库存及其他情况选择接受或拒绝买家的订单。如果卖家选择接受订单，系统则会从库存中扣除相应的商品数量。<br><br><span style="margin-left:25px"></span>图5.4 商品上架流程图	<br><br><span style="margin-left:25px"></span>图5.5 买家下单流程图<br><br><span style="margin-left:25px"></span>5.2.4 通过购物车向卖家下单<br><br><span style="margin-left:25px"></span>	买家可以使用购物车向卖家下单。买家将需要的商品添加进购物车，而后，进入购物车，确认订购的商品及数量，即可向卖家下单。流程图如下：<br><br><span style="margin-left:25px"></span>	图5.6 购物车下单流程图<br><br><span style="margin-left:25px"></span>6 系统实现<br><br><span style="margin-left:25px"></span>6.1 买家注册页面<br><br><span style="margin-left:25px"></span>图6.1 买家注册页面<br><br><span style="margin-left:25px"></span>	注册功能只能注册为买家用户，卖家用户只能由管理员添加，用户输入姓名，密码，并再次输入密码作为确认，输入手机号码作为登录时的凭证，输入验证码并点击注册按钮后会校验用户输入的数据是否正确，若正确则创建新的用户，否则，提示输入错误的字段。<br><br><span style="margin-left:25px"></span>6.2 用户登录页面<br><br><span style="margin-left:25px"></span>图6.2 用户登录界面<br><br><span style="margin-left:25px"></span>	登录时，用户输入注册的电话号码和密码，输入验证码并点击登录按钮后，校验用户输入的数据格式是否正确，不正确就给出错误提示，正确则提交数据到后台，后台根据电话号码查询该用户是否存在，不存在返回用户不存在，存在再判断密码是否正确，正确则将用户信息保存到缓存中，并返回登录成功，否则返回密码错误。<br><br><span style="margin-left:25px"></span>6.3 管理员添加店铺页面<br><br><span style="margin-left:25px"></span>图6.3 管理员添加店铺页面<br><br><span style="margin-left:25px"></span>	管理员登录后可进行管理店铺和用户的操作。添加店铺时需要指定店铺名称和拥有该店铺的用户，用户必须时卖家类型的用户，联系人和电话为实际管理店铺的人的姓名和电话，地址为店铺在批发市场中的地址编号，点击添加，校验输入的数据，如果没有错误，则创建新的店铺。<br><br><span style="margin-left:25px"></span>6.4 卖家进货页面<br><br><span style="margin-left:25px"></span>图6.4 卖家进货页面<br><br><span style="margin-left:25px"></span>卖家进货，先填写进货单，根据不同的商品选择不同的计价单位，包装方式，如果不是按重量计价可以不填写重量。页面会自动计算总金额，确认总金额后可以提交进货单，提交后库存中将会增加响应的商品。<br><br><span style="margin-left:25px"></span>7 系统测试<br><br><span style="margin-left:25px"></span>7.1 测试目标<br><br><span style="margin-left:25px"></span>	系统测试目标如下：<br><br><span style="margin-left:25px"></span>1.	水果批发市场综合应用系统功能完整性及正确性<br><br><span style="margin-left:25px"></span>2.	水果批发市场综合应用系统的性能是否满足需要<br><br><span style="margin-left:25px"></span>7.2 测试方法<br><br><span style="margin-left:25px"></span>	测试分为单元测试、集成测试和系统测试三个步骤，单元测试在完成一个方法的代码时进行，集成测试在完成一个模块时进行，系统测试在整个系统完成后进行[ ]。<br><br><span style="margin-left:25px"></span>	单元测试和集成测试使用spring test整合JUnit， 针对每一个测试目标编写测试用例。系统测试在系统的编码完成后，运行系统，按照系统设计的功能，逐项确认。<br><br><span style="margin-left:25px"></span>7.3 测试类型<br><br><span style="margin-left:25px"></span>	该系统中测试分为两类：<br><br><span style="margin-left:25px"></span>1.	系统功能测试：执行系统的所有功能，检查有无错误；<br><br><span style="margin-left:25px"></span>2.	系统性能测试：检查系统性能能否满足实际需要。<br><br><span style="margin-left:25px"></span>7.4 测试结果<br><br><span style="margin-left:25px"></span>	测试过程中，遇到了不少问题，其中就有javascript进行数学运算时精度的问题。系统中许多前端页面都使用了javascript计算数值，原生js进行浮点运算时会产生很多位小数点，而系统中不需要很高的精度，搜索后发现将参与运算的数值乘以一万再除以一万就可以解决这个问题。其他问题也经过多次修改和测试后达到了预期目的。<br><br><span style="margin-left:25px"></span>8 结  论<br><br><span style="margin-left:25px"></span>	互联网在日常生活中的应用越来越多，这也大大加快了生产工具接入互联网的进程。随着网络的飞速发展，网络更快，更稳定，web应用也是越来越多的开发者的首选。web应用在不同平台上具有统一的操作方式，这非常方便用户的使用，而且当性能遇到瓶颈时也比较容易扩展。<br><br><span style="margin-left:25px"></span>	本设计基于java web技术，实现了水果批发市场中三类人员：买家，卖家，管理员常用的基本功能，如下单，进货，店铺管理，用户管理等，以及网站的基本功能，如用户注册，登录，退出，重置密码等。实现过程中，充分考虑了水果批发市场中的实际需求，进行了很多调整，如商品的包装方式主要有散装、箱装、袋装、框装，计价方式主要有重量、数量、箱、袋等，能基本满足实际使用。<br><br><span style="margin-left:25px"></span>	虽然本系统已经完成，但还存在很多的不足，如：商品图片的存储，实际使用过程中，每天都会产生大量图片，如果不妥善处理，这将占用大量空间；前端界面不够美观，如果在实际生产中，这将严重影响到系统的推广。<br><br><span style="margin-left:25px"></span>	基于以上的分析，未来优化的主要工作有两点：<br><br><span style="margin-left:25px"></span>1）	优化图片存储策略，对不再使用的图片及时删除，频繁使用的图片优先放入缓存中，根据实际访问量可以考虑架设专用的图片服务器来提高页面响应速度[ ]。<br><br><span style="margin-left:25px"></span>2）	美化前端界面，可以使用现有的优秀前端框架，如bootstrap，easyui等，保证现有功能完整的情况下尽可能使界面整洁、美观。<br><br><span style="margin-left:25px"></span>参考文献<br><br><span style="margin-left:25px"></span>致  谢<br><br><span style="margin-left:25px"></span>能够完成毕业设计和论文首先要感谢这四年来孜孜不倦地教诲我的老师们，是他们传授给我的知识帮助我完成了毕业设计，并将在今后的职业生涯中继续帮助我。其次，要感谢互联网上那么的多的前辈，我从他们的回答、博客中也学到了很多实用的知识和经验。再次，要感谢我的导师和同组的同学，是他们在我完成论文的期间不断给予我建议和鼓励，是我能够顺利毕业。最后，要感谢我的家人在这段时间给予我的支持，是我能够安心完成学业。<br><br><span style="margin-left:25px"></span>谢谢你们！<br><br><span style="margin-left:25px"></span>学生签名：<br><br><span style="margin-left:25px"></span>日    期：<br><br></div><div class="zhengwencenter"><p>检测报告由<a href="http://www.ptcheck.com" target="_blank">PTcheck</a>文献相似度检测系统生成</p><p>Copyright © 2007-2015 PTcheck.</p></div><div style="margin-bottom:400px"></div></body></html>